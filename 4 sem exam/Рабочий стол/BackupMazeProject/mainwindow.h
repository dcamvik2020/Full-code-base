#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QVector>
#include <QString>
#include <QFrame>
#include <QKeyEvent>
#include <QMainWindow>
#include <QLabel>
#include <QTimer>
#include <QLCDNumber>
#include <QPushButton>
#include "paintwidget.h"

//generated by Qt Designer from mainwindow.ui form (see build-drawing-Desktop_Qt_5_3_MinGW_32bit-Debug/ui_mainwindow.h)
namespace Ui {
class MainWindow;
}

class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    explicit MainWindow(QWidget *parent = 0);
    ~MainWindow();

//handlers that process incoming events
public slots:
    void button_clicked();
    void paint_resized();
    void draw_path();
    void hide_path();
    void help();
    void timer_overflow();
    void timer_show_overflow();

protected:
    virtual void keyPressEvent(QKeyEvent *event) override;

private:

    // main parametres
    Ui::MainWindow *ui;
    PaintWidget *paintWidget;

    bool started;
    bool can_draw;
    int scale;
    int x0, y0;
    int saved_x, saved_y;
    int level_count;
    int sum_score;
    void draw_picture();
    void draw_o();
    void draw_rec(int x, int y);
    void draw_cln();

    // maze
    int** maze;
    int block_size;
    int height, width;
    void check_walls();
    bool left_wall;
    bool right_wall;
    bool up_wall;
    bool down_wall;
    struct Point {
        int x;
        int y;
    };
    Point point;
    QVector<Point> path;
    bool found_end;
    bool new_path;   //flag
    bool findpath(int i, int j, QString comeFrom);


    // interface
    QLabel *lb;
    QTimer *timer;
    QTimer *timer_show;
    QLabel *level;
    QLabel *score;
    QLabel *timer_val;
    QLCDNumber *scoreLcd;
    QLCDNumber *levelLcd;
    QPushButton *NewMaze;
    QPushButton *ShowPath;
    QPushButton *Help;
    QPushButton *Exit;
    QPushButton *Hide;

};

#endif // MAINWINDOW_H
